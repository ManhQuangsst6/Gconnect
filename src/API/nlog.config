<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- the targets to write to -->
    <targets>
        <target xsi:type="Database" name="database" >
        <connectionString>Server=localhost,5432;Database=mapdata;User id=postgres;Password=Ab@123456</connectionString>    
        <commandText>
            INSERT INTO public.nhat_ky_he_thong(
	      "TenNguoiDung", "HanhDong", "Module", "NoiDung")
	    VALUES (@TenNguoiDung, @HanhDong, @Module, @NoiDung);
        </commandText>
            <paramater name="@TenNguoiDung" layout="${tennguoidung}"/>
            <paramater name="@HanhDong" layout="${hanhdong}"/>
            <paramater name="@Module" layout="${module}"/>
            <paramater name="@NoiDung" layout="${noidung}"/>
        
            
            
        
        </target>
        
        <!-- File Target for all log messages with basic details -->
        <target xsi:type="File" name="allfile" fileName="./Log/nlog-AspNetCore-all-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

        <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
        <target xsi:type="File" name="ownFile-web" fileName="./Log/nlog-AspNetCore-all-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

        <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
        <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
    </targets>

    <!-- rules to map from logger name to target -->
    <rules>
        <!--All logs, including from Microsoft-->
        <logger name="*" minlevel="Warn" writeTo="database" />

        <!--Output hosting lifetime messages to console target for faster startup detection -->
        <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="database" final="true" />

        <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
        <logger name="Microsoft.*" maxlevel="Info" final="true" />
        <logger name="System.Net.Http.*" maxlevel="Info" final="true" />


    </rules>
</nlog>